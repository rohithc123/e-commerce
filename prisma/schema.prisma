
generator client {
    provider = "prisma-client-js"
}

datasource db{
    provider = "mongodb"
    url = "mongodb://localhost:27017/e-commerce"
}

model Product{
    id String @id @default(auto()) @map("_id") @db.ObjectId
    name String
    //using cents since this iis the unit used in stripe so it will be easier
    priceInCents Int 
    filePath String 
    imagePath String 
    description String 
    
    //this is kept if even though we cannot buy it previous customers who bought it can view this one
    isAvailableForPurchase Boolean @default(true)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    order Order[]
    downloadVerification DownloadVerification[]
}

model User {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    email String @unique 
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    orders Order[]

}

model Order {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    // since after some time there will be price increase or decrease for the product so it is important to know how much they paid during purchase
    pricePaidInCents Int 
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt 

    userId String 
    productId String

    //onDelete cascade makes all the products to delete when an user is deleted
    user User @relation(fields: [userId], references: [id],onDelete:Cascade)
   
    //onDelete restrict makes the products to still remain the order schema even if the product is deleted
    product Product @relation(fields: [productId], references: [id])

}

//helps to download the product for a given period of time
model DownloadVerification {
    id String @id @default(auto()) @map("_id") @db.ObjectId 
    expiredAt DateTime @updatedAt
    createdAt DateTime @default(now())
    productId String 
    product Product @relation( fields: [ productId], references: [id], onDelete:Cascade )
}